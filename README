Prompt: Develop a balances ledger

To run the application:
git clone to local machine, npm install, create postgres database called "ledger", npm run seed, npm run start

To run the tests:
npm run seed
npm run testAccount
exit out of terminal
npm run seed
npm run testTransactions

User Stories
1) As a user, I would like to open a balance account in one of the available currencies: USD, EUR, BRL, INR
  - completed
2) As a user, I would like to “top up” (add balance) to one of the balances available
  - completed
3) As a user with more than one balance account, I would like to transfer money from one balance to another, and convert if needed
  - completed
4) As a user I would like to see view all of the “top up” and currency conversion transactions I have completed (the ledger)
  - completed top up transactions

Requirements:

All data presented to the user should be saved in a database. There should be unit test coverage for as much of the application as you can (preferably focusing on the backend). Application setup should be carefully documented and tests should be easy to run. The API should be RESTful and thoughtfully constructed. The relational model that you come up with should be thoughtfully constructed.


Written Portion
Here’s a chance for you to showcase your thought one or a few of the important or
challenging decisions you made while developing this application. Feel free to pick one or
two decisions and write longer explanations so we can have a good understanding of your
critical thinking and writing skills.
